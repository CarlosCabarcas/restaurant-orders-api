version: '3.8'

services:
  # Servicio de aplicación Laravel
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: restaurant_orders_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    command: >
      sh -c "
        echo 'Esperando a que PostgreSQL esté listo...'
        while ! pg_isready -h postgres -p 5432 -U laravel; do
          sleep 2
        done
        echo 'Ejecutando migraciones...'
        php artisan migrate --force
        echo 'Iniciando PHP-FPM...'
        php-fpm
      "
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - laravel

  # Servidor web con Nginx
  nginx:
    image: nginx:alpine
    container_name: restaurant_orders_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - .:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - app
    networks:
      - laravel

  # Base de datos PostgreSQL
  postgres:
    image: postgres:15
    container_name: restaurant_orders_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: laravel
      POSTGRES_USER: laravel
      POSTGRES_PASSWORD: secret
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U laravel -d laravel"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - laravel

  # Redis para cache
  redis:
    image: redis:alpine
    container_name: restaurant_orders_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel

networks:
  laravel:

volumes:
  postgres_data:
